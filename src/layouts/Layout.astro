---
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Life of Aviation by Abel - Student Portal" />
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no, viewport-fit=cover" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script src="https://telegram.org/js/telegram-web-app.js"></script>
		<ViewTransitions />
	</head>
	<body class="text-tg-text antialiased font-sans isolate">
        <!-- Modernistic Background Effect -->
        <div class="absolute inset-0 -z-10 h-full w-full bg-tg-bg bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] dark:bg-[radial-gradient(rgba(255,255,255,0.1)_1px,transparent_1px)] [background-size:16px_16px]"></div>

		<div id="app-container" class="min-h-screen w-full max-w-lg mx-auto p-4">
			<slot />
		</div>

		<script>
            // This function is our single source of truth for all Telegram interactions
			function initializeTelegram() {
				if (window.Telegram && window.Telegram.WebApp) {
					const tg = window.Telegram.WebApp;
                    
                    // This function applies the theme colors
                    const applyTheme = (colorScheme) => {
						document.documentElement.classList.toggle('dark', colorScheme === 'dark');
                        // Set the CSS variables that our Tailwind classes use
                        document.documentElement.style.setProperty('--tg-theme-bg-color', tg.backgroundColor);
                        document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', tg.secondaryBackgroundColor);
                        document.documentElement.style.setProperty('--tg-theme-text-color', tg.textColor);
                        document.documentElement.style.setProperty('--tg-theme-hint-color', tg.hintColor);
                        document.documentElement.style.setProperty('--tg-theme-link-color', tg.linkColor);
                        document.documentElement.style.setProperty('--tg-theme-button-color', tg.buttonColor);
                        document.documentElement.style.setProperty('--tg-theme-button-text-color', tg.buttonTextColor);
					}
                    
                    // --- This is the key part that runs on every page load ---
					tg.ready();
					tg.expand();
                    
                    // We set the header color once and apply the initial theme
                    tg.setHeaderColor('bg_color'); // Use main background color for a seamless look
					applyTheme(tg.colorScheme);

                    // We also listen for when the user changes their theme in Telegram settings
					tg.onEvent('themeChanged', () => applyTheme(tg.colorScheme));

				} else {
					console.warn("Telegram WebApp script not loaded. Running in browser mode.");
					document.documentElement.classList.add('dark');
                    // Provide fallback colors for browser testing
                    document.documentElement.style.setProperty('--tg-theme-bg-color', '#1c1c1d');
                    document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', '#2c2c2e');
                    document.documentElement.style.setProperty('--tg-theme-text-color', '#ffffff');
                    document.documentElement.style.setProperty('--tg-theme-hint-color', '#787878');
                    document.documentElement.style.setProperty('--tg-theme-link-color', '#62bcf9');
                    document.documentElement.style.setProperty('--tg-theme-button-color', '#3e97f0');
                    document.documentElement.style.setProperty('--tg-theme-button-text-color', '#ffffff');
				}
			}

            // --- THE FIX ---
            // Run the initialization on the first load
			document.addEventListener('DOMContentLoaded', initializeTelegram);
            // And run it again every time Astro's View Transitions swaps a page
            document.addEventListener('astro:after-swap', initializeTelegram);
		</script>
	</body>
</html>